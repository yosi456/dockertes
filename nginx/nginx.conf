events {
    worker_connections 1024;
}

http {
    # MIME types設定
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # 文字エンコーディング設定
    charset utf-8;
    charset_types text/html text/xml text/plain text/css application/javascript application/json;

    upstream node_app {
        server node-server:3000;
    }

    upstream flask_app {
        server flask-server:5000;
    }

    server {
        listen 80;
        server_name localhost;

        # ルートページ
        location / {
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Docker練習 - 複数Webサーバ</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        h1 { color: #333; }
        .links { margin: 20px 0; }
        .links a { 
            display: inline-block; 
            margin: 10px; 
            padding: 10px 20px; 
            background: #4CAF50; 
            color: white; 
            text-decoration: none; 
            border-radius: 5px; 
        }
        .links a:hover { background: #45a049; }
    </style>
</head>
<body>
    <h1>Docker練習 - 複数Webサーバ構成</h1>
    <p>Nginxリバースプロキシを通じて複数のWebサーバにアクセスできます。</p>
    <div class="links">
        <a href="/node">Node.js App</a>
        <a href="/flask">Flask App</a>
    </div>
</body>
</html>';
            add_header Content-Type "text/html; charset=utf-8";
        }

        # Node.jsアプリへのプロキシ
        location /node {
            proxy_pass http://node_app/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Flaskアプリへのプロキシ
        location /flask {
            proxy_pass http://flask_app/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}